{"version":3,"sources":["Components/CreatePost.jsx","Components/DeletePost.jsx","Components/UpdatePost.jsx","Redux/Actions.js","Components/SearchPost.jsx","Components/Toolbar.jsx","Container/PostAction.js","Components/Allposts.jsx","Components/LikedPosts.jsx","Components/DislikedPosts.jsx","Components/SearchResult.jsx","Components/Home.jsx","App.js","reportWebVitals.js","Redux/Reducer.js","index.js"],"names":["CreatePost","useState","title","setTitle","body","setBody","history","useHistory","createPost","a","data","instance","post","response","console","log","alert","push","className","id","placeholder","style","marginLeft","type","value","onChange","e","target","htmlFor","color","fontWeight","fontSize","onClick","connect","state","Searched_Result","search_result","props","deletePost","delete","map","marginBottom","updatePost","put","marginTop","DislikedPosts","payload","LikedPosts","SearchActions","getPosts","dispatch","get","post_data","Search_Post","bindActionCreators","Actions","Id","setId","option","setOption","SearchPost","then","catch","error","Toolbar","to","marginRight","PostActions","obj","action","Allposts","posts","select_obj","select_post","this","setState","Component","All_posts","all_posts","Action","Liked_Post","like_result","length","class","Disliked_Post","dislike_result","Home","path","exact","component","AllPosts","DeletePost","UpdatePost","SearchResult","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Reducer","concat","store","createStore","applyMiddleware","thunk","axios","create","baseURL","headers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92d3d335.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { instance } from '../index';\nimport { useHistory } from 'react-router-dom';\n\nconst CreatePost = () => {\n\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const history = useHistory();\n\n    const createPost = async () => {\n        try {\n\n            let data = { title, body }\n            const response = await instance.post('/posts', data);\n            if (response) {\n                console.log(response)\n                alert('Post Created Succesfully')\n                history.push('/');\n            }\n        } catch (error) {\n            alert('Post creation failed.');\n        }\n    }\n\n    return (\n        <div>\n            <h2 className=\"heading1\">Create Post</h2>\n            <div className=\"row\">\n                <form className=\"col s12\">\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <textarea id=\"title\" placeholder=\"Title\" style={{ marginLeft: \"9rem\" }} className=\"materialize-textarea\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}></textarea>\n                            <label htmlFor=\"title\" style={{ color: \"tomato\", fontWeight: \"500\", fontSize: \"1.5rem\" }}>Enter Title</label>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className=\"input-field col s6\">\n                            <textarea id=\"body\" placeholder=\"Body\" style={{ marginLeft: \"9rem\" }} className=\"materialize-textarea\" type=\"text\" value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n                            <label htmlFor=\"body\" style={{ color: \"tomato\", fontWeight: \"500\", fontSize: \"1.5rem\" }}>Enter Body</label>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n\n\n            <button className=\"waves-effect waves-light btn-small createbtn\" onClick={createPost}>Create Post</button>\n        </div>\n    );\n};\n\nexport default CreatePost;","import React from 'react';\nimport { instance } from '../index';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst DeletePost = (props) => {\n\n  const { Searched_Result } = props;\n  const history = useHistory();\n\n  const deletePost = async (id) => {\n    try {\n      const response = await instance.delete(`/posts/${id}`);\n      if (response) {\n        alert('Post deleted Successfully!!!');\n        console.log(response)\n        history.push('/');\n\n      }\n    } catch (error) {\n      alert('Post delete failed.');\n    }\n\n  }\n\n  return (\n    <div>\n      {Searched_Result.map((post) => {\n        return (\n          <div className=\"row\" key={post.id}>\n            <div className=\"col s12 m6\">\n              <div className=\"card blue-grey darken-1\">\n                <div className=\"card-content white-text\">\n                  <span className=\"card-title\" style={{ fontWeight: \"500\", marginBottom: \"2rem\" }}>({post.id}.) Title : {post.title}</span>\n                  <p style={{ fontSize: \"1.75rem\" }}>Post Body : {post.body}</p>\n                </div>\n                <div className=\"card-action\">\n                  <button onClick={() => deletePost(post.id)} className=\"waves-effect waves-light btn-small likebtn\">Delete Post</button>\n                </div>\n              </div>\n            </div>\n            <hr />\n          </div>\n        )\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    Searched_Result: state.search_result\n  }\n}\n\nexport default connect(mapStateToProps, null)(DeletePost);","import React, { useState } from 'react';\nimport { instance } from '../index';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\n\nconst UpdatePost = (props) => {\n\n    const { Searched_Result } = props;\n    const history = useHistory();\n    const [title, setTitle] = useState(`${Searched_Result[0].title}`);\n    const [body, setBody] = useState(`${Searched_Result[0].body}`);\n\n    const updatePost = async () => {\n        try {\n            let data = { title, body }\n            const response = await instance.put(`/posts/${Searched_Result[0].id}`, data);\n            if (response) {\n                console.log(response)\n                alert('Post updated Successfully!!!')\n                history.push('/');\n            }\n        } catch (error) {\n            alert('Post update failed.');\n        }\n\n    }\n\n    return (\n        <div>\n            <h2 className=\"heading1\">Update Post</h2>\n            <div className=\"row\">\n                <form className=\"col s12\">\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <textarea id=\"title\" placeholder=\"Title\" style={{ marginLeft: \"9rem\", marginTop: \"2rem\" }} className=\"materialize-textarea\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}></textarea>\n                            <label htmlFor=\"title\" style={{ color: \"tomato\", fontWeight: \"500\", fontSize: \"1.5rem\", marginTop: \"2rem\" }}>Enter Title</label>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className=\"input-field col s6\">\n                            <textarea id=\"body\" placeholder=\"Body\" style={{ marginLeft: \"9rem\" }} className=\"materialize-textarea\" type=\"text\" value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n                            <label htmlFor=\"body\" style={{ color: \"tomato\", fontWeight: \"500\", fontSize: \"1.5rem\" }}>Enter Body</label>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <button onClick={updatePost} className=\"waves-effect waves-light btn-small createbtn\">Submit</button>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        Searched_Result: state.search_result\n    }\n}\n\nexport default connect(mapStateToProps, null)(UpdatePost);","import { instance } from '../index';\n\nexport const DislikedPosts = (data) => {\n  return {\n    type: 'dislikeResult',\n    payload: data\n  }\n\n}\n\nexport const LikedPosts = (data) => {\n  return {\n    type: 'likeResult',\n    payload: data,\n  }\n\n}\n\nexport const SearchActions = (data) => {\n  return {\n    type: 'searchResult',\n    payload: data\n  }\n\n}\n\nexport const getPosts = () => {\n\n  return async (dispatch) => {\n    try {\n\n      let post_data = await instance.get('/posts');\n      dispatch({ type: 'get_post', payload: post_data.data });\n\n    } catch (error) { alert('Oops! Something Went Wrong') }\n\n  }\n\n}\n\n","import React, { useState } from 'react';\nimport { instance } from '../index';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport * as Actions from '../Redux/Actions';\nimport '../App.css';\n\nconst SearchPost = (props) => {\n\n    const { Search_Post } = props;\n    const history = useHistory();\n\n    const [Id, setId] = useState();\n    const [option, setOption] = useState('title');\n\n    const SearchPost = () => {\n        instance.get(`/posts?${option}=${Id}`)\n            .then((response) => {\n                Search_Post.SearchActions(response.data)\n                history.push('/SearchedPost');\n            })\n            .catch((error) => console.log(error));\n    }\n\n    return (\n        <>\n            <div className=\"row\">\n                <form className=\"col s12\">\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <i onClick={SearchPost} className=\"material-icons prefix\" style={{ fontSize: \"2.5rem\" }}>search</i>\n                            <input className=\"search-input\" placeholder='Enter title to search' type='text' value={Id} onChange={(e) => setId(e.target.value)} />\n\n                            <select onChange={(e) => setOption(e.target.value)} >\n                                <option value='title'>Title</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n        </>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        Search_Post: bindActionCreators(Actions, dispatch)\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SearchPost);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchPost from './SearchPost';\n\nconst Toolbar = () => {\n    return (\n        <div className=\"nav-wrapper\">\n            <nav>\n                <ul className=\"left hide-on-med-and-down\">\n                    <li ><Link to='/createPost' style={{ fontSize: \"1.75rem\" }}>Create Post</Link></li>\n                    <li><Link to='/' style={{ fontSize: \"1.75rem\" }}>All Posts</Link></li>\n                    <li><Link to='/likedPost' style={{ fontSize: \"1.75rem\" }}>Liked Posts</Link></li>\n                    <li><Link to='/dislikedPost' style={{ fontSize: \"1.75rem\" }}>Disliked Posts</Link></li>\n\n                </ul>\n                <ul className=\"right hide-on-med-and-down\" style={{ marginRight: \"1rem\" }}><li><SearchPost /></li></ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Toolbar;","export const PostActions = (obj, action, post) => {\n        return obj[action]([post]);\n}","import React, { Component } from 'react';\nimport { instance } from '../index';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as Action from '../Redux/Actions';\nimport { Link } from 'react-router-dom';\nimport { PostActions } from '../Container/PostAction';\nimport '../App.css';\n\nclass Allposts extends Component {\n\n  state = {\n    posts: [],\n    select_obj: this.props.select_post\n  };\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  async getPosts() {\n    try {\n\n      let post_data = await instance.get('/posts');\n      if (post_data) {\n        this.setState({ posts: [...post_data.data] });\n      }\n    } catch (error) { alert('Oops! Something Went Wrong') }\n  }\n  render() {\n    return (\n      <>\n        <h1 className=\"heading\">All Posts</h1>\n        { this.state.posts.map(post => {\n          return (\n\n\n            <div className=\"row\" key={post.id} >\n\n              <div className=\"col s12 m12\">\n                <div className=\"card blue-grey darken-1\">\n                  <div className=\"card-content white-text\">\n                    <span className=\"card-title\" style={{ fontWeight: \"500\", marginBottom: \"2rem\" }}>({post.id}.) Title : {post.title}</span>\n                    <p style={{ fontSize: \"1.75rem\" }}>Post Body : {post.body}</p>\n                  </div>\n                  <div className=\"card-action\">\n                    <button className=\"waves-effect waves-light btn-small likebtn\" onClick={() => PostActions(this.state.select_obj, 'LikedPosts', post)}>Like</button>\n                    <button className=\"waves-effect waves-light btn-small dislikebtn\" onClick={() => PostActions(this.state.select_obj, 'DislikedPosts', post)}>Dislike</button>\n                    <Link className=\"waves-effect waves-light btn-small viewpost\" to='/SearchedPost' onClick={() => PostActions(this.state.select_obj, 'SearchActions', post)}>View Post</Link>\n                  </div>\n                </div>\n              </div>\n              <hr />\n            </div>\n\n          )\n        })\n        }\n      </>\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    All_posts: state.all_posts ? state.all_posts : [],\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    select_post: bindActionCreators(Action, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Allposts);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PostActions } from '../Container/PostAction';\nimport { Link } from 'react-router-dom';\nimport * as Action from '../Redux/Actions';\nimport { bindActionCreators } from 'redux';\nimport '../App.css'\n\nconst LikedPosts = (props) => {\n  const { Liked_Post, select_post } = props;\n  return (\n    <>\n\n      <div>\n        {Liked_Post.length > 0 ? Liked_Post.map(post => {\n          return (\n            <div class=\"row\" key={post.id}>\n              <div class=\"col s12 m6\">\n                <div class=\"card blue-grey darken-1\">\n                  <div class=\"card-content white-text\">\n                    <span class=\"card-title\" style={{ fontWeight: \"500\", marginBottom: \"2rem\" }}>({post.id}.) Title : {post.title}</span>\n                    <p style={{ fontSize: \"1.75rem\" }}>Post Body : {post.body}</p>\n                  </div>\n\n                </div>\n              </div>\n              <hr />\n            </div>\n\n          )\n        }) : <h2 className=\"heading\">'No Liked Posts'</h2>}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    Liked_Post: state.like_result ? state.like_result : []\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n  return {\n    select_post: bindActionCreators(Action, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LikedPosts);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PostActions } from '../Container/PostAction';\nimport { Link } from 'react-router-dom';\nimport * as Action from '../Redux/Actions';\nimport { bindActionCreators } from 'redux';\nimport '../App.css'\n\nconst DislikedPosts = (props) => {\n  const { Disliked_Post, select_post } = props;\n  return (\n    <div>\n      {Disliked_Post.length > 0 ? Disliked_Post.map(post => {\n        return (\n          <div class=\"row\" key={post.id}>\n            <div class=\"col s12 m6\">\n              <div class=\"card blue-grey darken-1\">\n                <div class=\"card-content white-text\">\n                  <span class=\"card-title\" style={{ fontWeight: \"500\", marginBottom: \"2rem\" }}>({post.id}.) Title : {post.title}</span>\n                  <p style={{ fontSize: \"1.75rem\" }}>Content : {post.body}</p>\n                </div>\n\n              </div>\n            </div>\n            <hr />\n          </div>\n        )\n      }) : <h2 className=\"heading\">'No Disliked Posts'</h2>}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    Disliked_Post: state.dislike_result ? state.dislike_result : []\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n  return {\n    select_post: bindActionCreators(Action, dispatch)\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DislikedPosts);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PostActions } from '../Container/PostAction';\nimport * as Action from '../Redux/Actions';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\n\nconst SearchResult = (props) => {\n\n  const { Searched_Result, select_post } = props;\n\n  return (\n    <div>\n      {Searched_Result.map(post => {\n        return (\n          <div className=\"row\" key={post.id}>\n            <div className=\"col s12 m6\">\n              <div className=\"card blue-grey darken-1\">\n                <div className=\"card-content white-text\">\n                  <span className=\"card-title\" style={{ fontWeight: \"500\", marginBottom: \"2rem\" }}>({post.id}.) Title : {post.title}</span>\n                  <p style={{ fontSize: \"1.75rem\" }}>Post Body : {post.body}</p>\n                </div>\n                <div className=\"card-action\">\n                  <button className=\"waves-effect waves-light btn-small likebtn\" onClick={() => PostActions(select_post, 'LikedPosts', post)}>Like</button>\n                  <button className=\"waves-effect waves-light btn-small dislikebtn\" onClick={() => PostActions(select_post, 'DislikedPosts', post)}>Dislike</button>\n                  <Link className=\"waves-effect waves-light btn-small likebtn\" to='/deletePost'>DeltePost</Link>\n                  <Link className=\"waves-effect waves-light btn-small likebtn\" to='/updatePost'>UpdatePost</Link>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        )\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    Searched_Result: state.search_result\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n  return {\n    select_post: bindActionCreators(Action, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport CreatePost from './CreatePost';\nimport DeletePost from './DeletePost';\nimport UpdatePost from './UpdatePost';\nimport Toolbar from './Toolbar';\nimport AllPosts from './Allposts';\nimport LikedPosts from './LikedPosts';\nimport DislikedPosts from './DislikedPosts';\nimport SearchPost from './SearchPost';\nimport SearchResult from './SearchResult';\n\n\nconst Home = () => {\n    return (\n        <div>\n            <Toolbar />\n\n            <Switch>\n                <Route path=\"/\" exact component={AllPosts} />\n                <Route path=\"/createPost\" exact component={CreatePost} />\n                <Route path=\"/deletePost\" exact component={DeletePost} />\n                <Route path=\"/updatePost\" exact component={UpdatePost} />\n                <Route path=\"/dislikedPost\" exact component={DislikedPosts} />\n                <Route path=\"/likedPost\" exact component={LikedPosts} />\n                <Route path=\"/SearchedPost\" exact component={SearchResult} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default Home;","import Home from './Components/Home';\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const Reducer = (state = [], action) => {\n    switch (action.type) {\n\n        case 'searchResult':\n            return {\n                ...state, search_result: action.payload\n            }\n            break;\n\n        case 'likeResult':\n            return {\n                ...state, like_result: state.like_result ? action.payload.concat(state.like_result) : action.payload\n            }\n            break;\n\n        case 'dislikeResult':\n            return {\n                ...state, dislike_result: state.dislike_result ? action.payload.concat(state.like_result) : action.payload\n            }\n            break;\n\n        case 'get_post':\n            return {\n                ...state, all_posts: action.payload\n            }\n            break;\n\n        default: return state;\n    }\n}\n\nexport default Reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport axios from 'axios';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport Reducer from './Redux/Reducer';\n\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\nconst option = {\n  baseURL: \"https://jsonplaceholder.typicode.com\",\n  headers: { 'content-type': 'application/x-www-form-urlencoded' }\n}\n\nexport const instance = axios.create(option);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}